= テキストエントリ 
エントリウィジェットは一行のテキストボックスに入力と表示ができる．
テキストはメソッドを使って新しいテキストに置き換えることもできるし，エントリウィジェットの現在の内容の先頭または後尾にテキストを追加することもできる．

まず，エントリウィジェットを作成する：

  Gtk::Entry.new

次のメソッドで，エントリウィジェットの現在の内容を変更することができる．

  Gtk::Entry#set_text(text)
  Gtk::Entry#text=(text)

Gtk::Entry#set_textは現在の内容を置き換えてエントリウィジェットの内容を設定する．
Gtk::EntryクラスはGtk::Editableモジュールをインクルードしているので，他にも内容を操作するための多くのメソッドを利用可能である．

エントリウィジェットの内容は次のメソッドで取得できる．

  Gtk::Entry#text

エントリの内容をキー入力によって変更されたくない場合は，編集可能状態を変更すればよい．

  Gtk::Entry#set_editable(editable)
  Gtk::Entry#editable=(editable)

このメソッドのeditable引数にtrueまたはfalseを与えることでエントリウィジェットの編集可能状態を切り替えることができる．

パスワード入力などのように入力したテキストを表示したくないようなところにエントリを使用する場合は，以下のメソッドで可視状態を変更しよう．

  Gtk::Entry#set_visibility(visible)
  Gtk::Entry#visibility=(visible)

テキストのある領域を選択状態に設定するには以下のメソッドを用いることができる．
これはエントリになにかデフォルトのテキストを設定した後に，ユーザが簡単にそれを削除できるようにするために使われるのがほとんどである．

  Gtk::Entry#select_region(start, end)

エントリウィジェットのテキストの先頭からstart文字目からend文字目まで(正確にはstart文字目の前からend文字目の前)が選択状態になる．
負の数はテキストの末尾を意味する．

ユーザがテキストを入力した事を捉えたい場合は"activate"または"changed"シグナルに接続すればよい．
"activate"シグナルはユーザがエントリウィジェット内でエンターキーを押したときに発行される．
"changed"シグナルはテキストを変更したときは常に，例えば文字を入力したり削除したりするたびに発行される．

{{image_right "entry.png"}}
以下のコードはエントリウィジェットの利用例である．

  #! /usr/bin/env ruby
  
  require 'gtk2'
  
  window = Gtk::Window.new
  window.set_size_request(200, 100)
  window.title = "GTK Entry"
  window.signal_connect("destroy") {Gtk.main_quit}
  
  vbox = Gtk::VBox.new(false, 0)
  window.add(vbox)
  
  entry = Gtk::Entry.new
  entry.max_length = 50
  entry.signal_connect("activate") {puts "Entry contents: #{entry.text}"}
  entry.text = "hello"
  entry.text += " world"
  entry.select_region(0, -1)
  vbox.pack_start(entry, true, true, 0)
  
  hbox = Gtk::HBox.new(false, 0)
  vbox.add(hbox)
  
  check = Gtk::CheckButton.new("Editable")
  check.signal_connect("toggled") {|w| entry.editable = w.active?}
  check.active = entry.editable?
  hbox.pack_start(check, true, true, 0)
      
  check = Gtk::CheckButton.new("Visible")
  check.signal_connect("toggled") {|w| entry.visibility = w.active?}
  check.active = entry.visibility?
  hbox.pack_start(check, true, true, 0)
  
  button = Gtk::Button.new("Close")
  button.signal_connect("clicked") {Gtk.main_quit}
  vbox.pack_start(button, true, true, 0)
  button.can_default = true
  button.grab_default
  
  window.show_all
  Gtk.main


== 最大長を指定する
入力可能な最大長を指定するにはGtk::Entry#max_length=を使う．

  require 'gtk2'
  
  entry = Gtk::Entry.new
  entry.max_length = 10
  
  window = Gtk::Window.new
  window.add(entry)
  window.show_all
  Gtk.main

ここでのmax_length値は「文字数」であって「文字バイト数」ではないことに注意して欲しい。例えば、全角の「あ」は10文字（30バイト分）入る。

