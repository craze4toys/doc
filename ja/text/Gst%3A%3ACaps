= class Gst::Caps
Capabilities of pads.

== Object Hierarchy
* Object
  * GLib::Boxed
    * Gst::Caps

== Class Methods
--- Gst::Caps.from_string(string)
    Converts a caps from a string representation.
    * string: a string to convert to a Gst::Caps.  
    * Returns: a newly allocated Gst::Caps.

== Instance Methods
--- ==?(caps)
    Synonym for Gst::Caps#equal?.
    * caps: another Gst::Caps.  
    * Returns: whether the given caps represent the same set of caps than  self.

--- always_compatible?(caps)
    A given caps structure is always compatible with another if every 
    media format that is
    in the first is also contained in the second.
    * caps: another Gst::Caps.  
    * Returns: whether self is compatible with the given caps.

--- any?
    This method returns whether the caps represents any media format.
    * Returns: whether the caps represents any media format.

--- append(caps)
    Appends the structures contained in caps to self.
    * caps: a Gst::Caps to append.  
    * Returns: self.

--- append_structure(structure)
    Append the given structure to self.
    * structure: the Gst::Structure to append.  
    * Returns: self.

--- chained??
    Synonym for Gst::Caps#simple?.
    * Returns: whether the caps contains multiple Gst::Structure objects.

--- empty?
    This method returns whether the caps represents no media formats.
    * Returns: whether the caps represents no media formats.

--- equal?(caps)
    This method returns whether the given caps represent the same set of caps than  self.
    * caps: another Gst::Caps.  
    * Returns: whether the given caps represent the same set of caps than  self.

--- equal_fixed?(caps)
    This method returns whether the given fixed caps represent the same set of caps  than self (self must be fixed as well).
    * caps: another Gst::Caps.  
    * Returns: whether the given fixed caps represent the same set of caps  than self (self must be fixed as well).

--- fixed?
    Fixed caps describes exactly one format, that is, they have exactly one
    structure, and each field in the structure describes a fixed type.
    Examples of non-fixed types are ranges and lists.
    * Returns: whether the caps is fixed.

--- get_structure(index)
    Finds the structure in the caps that has the given index, and 
    returns it.
    * index: the index of a structure.  
    * Returns: a Gst::Structure corresponding to index, or nil if not found.

--- intersect(caps)
    Creates a new Gst::Caps that contains all the formats that are 
    common to both
    self and the given caps.
    * caps: another Gst::Caps.  
    * Returns: a new Gst::Caps object.

--- length
    Synonym for Gst::Caps#size.
    * Returns: the number of structures contained in the caps.

--- new(*structures)
    Creates a new Gst::Caps object and adds all given structures to it.  If no
    structures are given, the caps will be empty.  If you want a caps that is 
    compatible with any media format, just create an empty caps, then call
    Gst::Caps#set_any.
    * structures: a list of Gst::Structure objects.  
    * Returns: a newly allocated Gst::Caps object.

--- normalize
    Creates a new Gst::Caps that represents the same set of formats as self,
    but contains no lists.  Each list is expanded into separate 
    Gst::Structure
    objects.
    * Returns: a new Gst::Caps object.

--- replace(caps)
    Replaces the current caps inplace with the given caps.
    * caps: another Gst::Caps.  
    * Returns: self.

--- set_any(state)
    Sets whether the caps should be compatible with any media format.
    * state: true or false.  
    * Returns: self.

--- simple?
    This method returns whether the caps contains multiple Gst::Structure objects.
    * Returns: whether the caps contains multiple Gst::Structure objects.

--- simplify
    Creates a new Gst::Caps that represents the same set of formats as 
    self, but
    simpler.  Component structures that are indentical are merged. 
    Component
    structures that have ranges or lists that can be merged are also merged.
    * Returns: a new Gst::Caps object.

--- simplify!
    Modifies the current caps inplace into a representation that represents
    the same set of formats as self, but in a simpler form.
    Component structures that are indentical are merged.  Component 
    structures
    that have ranges or lists that can be merged are also merged.
    * Returns: whether the caps could be simplified.

--- size
    This method returns the number of structures contained in the caps.
    * Returns: the number of structures contained in the caps.

--- subset?(caps)
    Checks if all caps represented by self are also represented by the 
    given caps.
    This method does not work reliably if optional properties for caps 
    are included
    on one caps and omitted on the other.
    * caps: another Gst::Caps.  
    * Returns: whether self is a subset of the given caps.

--- subtract(caps)
    Subtracts the given subtrahend caps from the minuend (self).
    This method does not work reliably if optional properties for caps 
    are included
    on one caps and omitted on the other.
    * caps: another Gst::Caps.  
    * Returns: the resulting caps, as a new Gst::Caps object.

--- to_s
    Synonym for Gst::Caps#to_string.
    * Returns: a string representation of the current caps.

--- to_string
    This method returns a string representation of the current caps.
    * Returns: a string representation of the current caps.

--- union(caps)
    Creates a new Gst::Caps that contains all the formats that are in 
    either
    self and the given caps.
    * caps: another Gst::Caps.  
    * Returns: a new Gst::Caps object.

== See Also
((<Gst>)).

- ((<lrz>))
