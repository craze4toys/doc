= プライマリ（メイン）ウィンドウを作る
glade-2を起動し、まずは、プライマリウインドウを生成します。

ウィジェットパレットウインドウでウインドウアイコンをクリックし新規ウインドウを生成します。

{{image_right("1.png")}}
{{br}}

生成したウインドウのプロパティを設定します。

=== Widgetタブ
ひとつひとつ説明していくのが大変なので変更したところだけ（←手抜き）。

{{image_right("2.png")}}

:Name
 そのウィジェットの名前（ID）です。Rubyから呼び出す際にも使います。ここでは"main_window"にします。IDですからアプリケーションでユニークな値になっている必要があります。
:Title
 ウインドウのタイトルバーに表示される文字列です。"Hello World Editor"にします。もちろん日本語でも大丈夫ですが、目指すは国際化されたエディタです！英語にしましょう！
 そうそう、ここは後で編集中のファイル名を表示できるようにしたいですね。後ほど説明します。
:Default Width, Default Height
 最初に表示したときの画面サイズです。


=== Signalsタブ

{{image_right("3.png")}}

ウインドウの右上にある×ボタン（「閉じる」ボタン）がクリックされたらアプリケーションを終了させることにします。
×ボタンがクリックされると、main_windowはdelete_eventイベントを発生させるのでそれを捕捉してHandlerを呼び出します。Signal:にdelete_eventを選択すると、Handlerは自動的に"on_main_window_delete_event"という名前になります。名前を変更しても良いですが、ここではそのまま使います。Addボタンを押してリストにSignalとHandlerを追加します。

実はこのdelete_eventイベントはウィンドウの破棄が決定したことを表すのではなく、ウィンドウを破棄して良いかどうかの意思確認を意味しており、その返事に「はい」と答えた場合、つづいて本当にウィンドウが破棄されることを表すdestroyイベントが発生します。ですので、Signal:でdestroyを選択し直してこれもリストに追加します。


＃後で、on_main_window_delete_eventとon_main_window_destroyというメソッドをRubyで記述し、実際の終了コードを書きます。

ちなみにdelete_eventイベントのHandler（on_main_window_delete_event）からfalseを返すと、「ウィンドウを破棄しても良い」と答えたとみなされdestroyイベントが発生し、trueを返すと破棄が中止されます。

またdestroyイベントのHandler（on_main_window_destroy）では必ずGtk.main_quitを呼び出すようにします。このモジュールメソッドは、ウィンドウがイベントを処理するためのメインループから脱け出す機能を持つので、これを呼び忘れると、GUIが消されたにもかかわらずスクリプトの実行がトップレベルに戻らずプログラムが終了できない、という状態になってしまいます。
