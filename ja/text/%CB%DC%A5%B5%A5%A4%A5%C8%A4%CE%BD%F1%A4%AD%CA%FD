= 本サイトのドキュメントの書き方
== 誰でも書き込めるの？
# 本サイトはアクセス権のある人のみが書き込める形態になっています。
#
#協力したいと思われた方は、まずは((<開発者向けメーリングリスト|URL:http://sourceforge.net/mail/?group_id=53614>))に入ってどうすれば良いか聞いてみてください。

本サイトは誰でも書き込める形態になっています。

明らかな間違いはその場で修正してください。大きな変更の場合は((<開発者向けメーリングリスト|URL:http://sourceforge.net/mail/?group_id=53614>))に入ってどうすれば良いか聞いてみてください。

是非、一緒にRuby-GNOME2を盛り上げていきましょう！

== 本サイトのドキュメントの書き方
ドキュメントはRDで記述します。詳しくは((<RDP|URL:http://helium.ruby-lang.org/~rubikitch/RDP.cgi?cmd=view&name=RD>))を参照してください。

((<RWikiのも|URL:http://rwiki.jin.gr.jp/cgi-bin/rw-cgi.rb?cmd=view;name=RD%A4%CE%BD%F1%A4%AD%CA%FD>))わかりやすいです(他力本願(^^;))。

== Hiki/RD+拡張
=== ModuleNames
Hiki/RD+では、より簡易にRuby-GNOME2に関連するドキュメントを読み書きすることができるように、
クラスやメソッド名は自動的にリンクが生成されるようにしています。従って(('((<Hoge::Fuga>))'))と言った記述をする必要はありません。

ただし、これを有効活用するために（特にAPIリファレンスに言えるのですが）、以下のルールに従ってください。

* リンクする側
   * Hoge::Foo - クラス名
   * Hoge::FOO - 定数値
   * Hoge::Foo#bar - インスタンスメソッド
   * Hoge::Foo.bar - クラスメソッド
   * Hoge.bar - モジュール関数

* リンクされる側
   * クラスメソッド - "--- Hoge::Foo.new" 
   * インスタンスメソッド - "--- bar" #メソッド名のみ

本機能を使うにはModuleNamesページにそのモジュールを記述しておきます。

=== アンカー自動生成
アンカーの自動生成には、RD自体が持つ方法とHikiのInterWikiを拡張したInterWiki+機能を使うことができます。

==== 引数から単純にアンカーを生成する方法
これは、通常のRDがサポートする形式です。

 ((<URL:url>))
 ((<name|URL:url>))

* name - そのリンク先の名称(省略可能。省略した場合はurlが名称として表示される)
* url - URL

 例：
 ((<URL:http://www.hoge.com/>))
 ((<hoge|URL:http://www.hoge.com/>))

これらは以下のような結果になります。

 結果：
 <a href="http://www.hoge.com/">http://www.hoge.com/</a>
 <a href="http://www.hoge.com/">hoge</a>

なお、URLが画像(jpg, jpeg, pngで終わるもの)はIMGタグに展開されます。

==== InterWikiを使う方法
InterWikiとは要は外部へのリンクを簡単にできるようにするもので、((<Hiki>))自体が持つInterWikiと同様の機能です。あらかじめ、InterWikiNameというページにキーワードを登録しておき、keyに該当するデータを元にアンカーを生成します。

 ((<name|key:option>)) 

* name - そのリンク先の名称(省略可能)。省略した場合はkeyが表示されます。
* key - キー(InterWikiNameのキーワード)。InterWikiNameのURLに展開されます。
* option - URLに追加する文字列(省略可能)。日本語を使いたい場合はURLエンコードするように設定します(defaultはなし、辞書ファイルにeuc/sjis/jisのいずれかを指定する)。

 例：
 ((<Hiki>))
 ((<bibo:20020329>))
 ((<Linuxビボ〜ろく|bibo:20020329>))

例えば、後述するInterWikiNameをそのまま利用したとすると以下のような結果になります。

 結果：
 <a href="http://www.namaraii.com/hiki.cgi?">Hiki</a>
 <a href="http://ponx.s5.xrea.com/bibo/?date=20020329">bibo</a>
 <a href="http://ponx.s5.xrea.com/bibo/?date=20020329">Linuxビボ〜ろく</a>

ちなみに、特殊な記号('/'など)を使う場合は"(ダブルクオート)で括ります。

 ((<"Ruby/GLib">))

==== InterWikiNameページの書き方
InterWikiNameページは (('[[keyword|url]]')) charset というフォーマットで書きます。

 *[[Hiki|http://www.namaraii.com/hiki/hiki.cgi?]] euc
 *[[bibo|http://ponx.s5.xrea.com/bibo/?date=]] euc

== プラグイン
=== statusプラグイン
ステータス一覧を表示するプラグインです。

 {{status "Title", "
 GLib::Type|GType|#|hoge
 GLib::TypePlugin|GTypePlugin|#|hoge
 "}}

=== imageプラグイン
添付ファイルをイメージとして表示するプラグインです。

 {{image_left("foo.png")}}
 {{image_right("foo.png")}}

もし、英語のサイトの画像にリンクしたい場合は"en:"を使って以下のようにします。

 {{image_right("en:foo.png")}}                #英語サイトとページIDが同じ場合
 {{image_right("en:foo.png", "OtherPageID")}} #OtherPageIDは英語サイトのページID

直接URLを指定することもできます(httpのみ)

 {{image_right("http://..../")}}

イメージの次の行で強制的に改行させたい場合はbrプラグインを使います。

 {{br}}

=== attach_anchorプラグイン
添付ファイルへのリンクを生成します。

 {{attach_anchor("foo.png")}}

=== linkプラグイン
Prev/Up/Home/Nextリンクを生成します。チュートリアルなどで使用します。

 {{link("PrevPageID", "UpPageID", "HomePageID", "NextPageID")}}

nilを使えば該当するリンクを表示しなくなります。

 {{link(nil, nil, "HomePageID", "NextPageID")}}


== APIリファレンスの書き方
他のAPIリファレンスの書き方に倣ってください。わからない部分はMLで聞くと(^^;)。

== その他
とりあえず、((<練習ページ>))で練習してみてください。

- ((<むとう>))
