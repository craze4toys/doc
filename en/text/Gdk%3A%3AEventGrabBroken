= class Gdk::EventGrabBroken

Generated when a pointer or keyboard grab is broken. On X11, this happens when the grab window becomes unviewable (i.e. it or one of its ancestors is unmapped), or if the same application grabs the pointer or keyboard again. Note that implicit grabs (which are initiated by button presses) can also cause Gdk::EventGrabBroken events. ((*Since 2.8*))

== Object Hierarchy
* Object
  * GLib::Boxed
    * Gdk::Event
      * Gdk::EventAny
        * Gdk::EventGrabBroken

== Class Methods
--- Gdk::EventGrabBroken.new(type = Gdk::Event::GRAB_BROKEN)
    Creates a new event of the given type. All fields are set to 0. ((* Since 2.8 *))
    * type: Gdk::Event::GRAB_BROKEN
    * Returns: a new Gdk::EventGrabBroken.

== Instance Methods
--- keyboard?
    Returns true if a keyboard grab was broken, false if a pointer grab was broken. ((*Since 2.8*))

--- keyboard=(keyboard)
    Set if the a keyboard grab was broken. ((*Since 2.8*))
    * Returns: keyboard

--- set_keyboard(keyboard)
    Same as Gdk::EventGrabBroken##keyboard=. ((*Since 2.8*))
    * Returns: self

--- implicit?
    Returns true if the broken grab was implicit. ((*Since 2.8*))

--- implicit=(implicit)
    Set if the broken grab was implicit. ((*Since 2.8*))
    * Returns: implicit

--- set_implicit(implicit)
    Same as Gdk::EventGrabBroken##implicit=. ((*Since 2.8*))
    * Returns: self

--- grab_window
    If this event is caused by another grab in the same application, returns the new grab window (Gdk::Window). Otherwise returns nil. ((*Since 2.8*))

--- grab_window=(window)
    Set the grab window. ((*Since 2.8*))
    * Returns: window

--- set_grab_window(window)
    Same as Gdk::EventGrabBroken##grab_window=. ((*Since 2.8*))
    * Returns: self

== ChangeLog

-((<gc>))
