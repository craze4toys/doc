= module GLib::Icon

GLib::Icon is a very minimal interface for icons. It provides functions for
checking the equality of two icons, hashing of icons and serializing an icon to
and from strings.

GLib::Icon does not provide the actual pixmap for the icon as this is out of
GIO’s scope. Implementations of GLib::Icon may, however, contain the name of
an icon (see GLib::ThemedIcon), or the path to an icon (see
GLib::LoadableIcon).

To obtain a hash of a GLib::Icon, see GLib::Icon#hash.

To check if two GLib::Icons are equal, see GLib::Icon#equal?

For serializing a GLib::Icon, use GLib::Icon#to_string and
GLib::Icon.new_for_string.

If your application or library provides one or more GLib::Icon implementations
you need to ensure that each GLib::Type is registered with the type system
prior to calling GLib::Icon.new_for_string.

== Included Modules

  * GLib::Interface

== Module Functions

--- GLib::Icon.new_for_string(string)

     Generate a GLib::Icon instance from str. This function can fail if
     ((|string|)) is not valid; see GLib::Icon#to_string for discussion.

     If your application or library provides one or more GLib::Icon
     implementations you need to ensure that each GLib::Type is registered with
     the type system prior to calling GLib::Icon.new_for_string.

     * string: A String obtained from GLib::Icon#to_string
     * Returns: A new GLib::Icon

== Instance Methods

--- ==(other)

     Same As GLib::Icon#eql?.

     * Returns: self: ((*FIXME*))

--- eql?(other)

     Checks if two icons are equal.

     * other: The other GLib::Icon
     * Returns: true if this GLib::Icon is equal to ((|other|))

--- hash

     Gets a hash for an icon.

     * Returns: A Fixnum containing a hash for the icon, suitable for
       use in a Hash or similar data structure

--- to_s

     Same as GLib::Icon#to_string.

--- to_str

     Same as GLib::Icon#to_string.

--- to_string

     Generates a textual representation of the icon that can be used for
     serialization such as when passing the icon to a different process or
     saving it to persistent storage. Use GLib::Icon.new_for_string to get the
     icon back from the returned String.

     The encoding of the returned String is proprietary to GLib::Icon except in
     the following two cases

     * If icon is a GLib::FileIcon, the returned string is a native path (such
       as (({/path/to/my icon.png}))) without escaping if the GLib::File for
       icon is a native file. If the file is not native, the returned string is
       the result of GLib::File#uri (such as
       (({sftp://path/to/my%20icon.png}))).
     * If icon is a GLib::ThemedIcon with exactly one name, the encoding is
       simply the name (such as network-server).

     Since 2.20

     * Returns: An UTF-8 String, or nil if the icon can’t be serialized


== See Also

== ChangeLog


