= Plugins
{{link("tut-gst-elements-properties", nil, "tut-gst", "tut-gst-pads-elem")}}

A plugin is a shared library which should implement one function, plugin_init, that creates all the element factories and registers all the type definitions contained in the plugin. Without this function, a plugin cannot be registered.

The plugins are maintained in the plugin system. Optionally, the type definitions and the element factories can be saved into an XML representation so that the plugin system does not have to load all available plugins in order to know their definition.

Currently plugins have to be written in C.  You can't create GStreamer plugins in Ruby, but you can still access exising plugins.

You can query a list of available plugins with the method Gst::Registry.plugins or Gst::Registry.each_plugin as this example shows:

  Gst::Registry.each_plugin do |plugin|
    puts "plugin: " + plugin.name
  end

You can also get more information using methods such as Gst::Plugin#filename, Gst::Plugin#description, Gst::Plugin#major_version, Gst::Plugin#minor_version, Gst::Plugin#license, etc...
