= class Gdk::EventMotion

Generated when the pointer moves.

== Object Hierarchy

* Object
  * GLib::Boxed
    * Gdk::Event
      * Gdk::EventAny
        * Gdk::EventMotion

== Class Methods

--- Gdk::EventMotion.new(type = Gdk::Event::MOTION_NOTIFY)

    Creates a new event of the given type. All fields are set to 0. ((* Since 2.2 *))
    * type: Gdk::Event::MOTION_NOTIFY.
    * Returns: a new Gdk::EventMotion.

== Instance Methods

--- time

    Gets the time of the event in milliseconds. 
    * Returns: the time of the event in milliseconds

--- time=(time)

    Sets the time of the event in milliseconds.
    * time: the time of the event in milliseconds
    * Returns: time

--- set_time(time)

    Same as Gdk::EventMotion#time=.
    * time: the time of the event in milliseconds
    * Returns: self

--- x

    Gets the x coordinate of the pointer relative to the window. 
    * Returns: the x coordinate of the pointer relative to the window

--- x=(x)

    Sets the x coordinate of the pointer relative to the window. 
    * x: the x coordinate of the pointer relative to the window
    * Returns: x

--- set_x(x)

    Same as Gdk::EventMotion#x=.
    * x: the x coordinate of the pointer relative to the window
    * Returns: self

--- y

    Gets the y coordinate of the pointer relative to the window. 
    * Returns: the y coordinate of the pointer relative to the window

--- y=(y)

    Sets the y coordinate of the pointer relative to the window. 
    * y: the y coordinate of the pointer relative to the window
    * Returns: y

--- set_y(y)

    Same as Gdk::EventMotion#y=.
    * y: the y coordinate of the pointer relative to the window
    * Returns: self

--- axes

    x, y translated to the axes of device, or nil if device is the mouse. 
    * Returns: [x, y] or nil

--- set_axes(x, y)

    Set the axes of device.
    * x: the x coordinate of the axes of device
    * y: the y coordinate of the axes of device
    * Returns: self

--- state

    Gets the bit-mask representing the state of the modifier keys (e.g. Control, Shift and Alt) and the pointer buttons. See ((<GdkModifierType|Gdk::Window#GdkModifierType>)). 
    * Returns: ((<GdkModifierType|Gdk::Window#GdkModifierType>))

--- state=(state)

    Sets a bit-mask representing the state of modifier keys.
    * state: a bit-mask of ((<GdkModifierType|Gdk::Window#GdkModifierType>)).
    * Returns: self

--- set_state(state)

    Same as Gdk::EventMotion#state=.
    * state: a bit-mask of ((<GdkModifierType|Gdk::Window#GdkModifierType>)).
    * Returns: self

--- hint?

    Gets the value if this event is just a hint. See hint=.
    * Returns: self

--- hint=(hint)

    set to true if this event is just a hint, see the Gdk::Event::POINTER_MOTION_HINT_MASK value of ((<GdkEventMask|Gdk::Event#GdkEventMask>)). 
    * hint: true if this event is just a hint, otherwise false.
    * Returns: hint

--- set_hint(hint)

    Same as Gdk::EventMotion#hint=.
    * hint: true if this event is just a hint, otherwise false.
    * Returns: self

--- device

    Gets the device where the event originated. 
    * Returns: device(Gdk::Device)

--- device=(device)

    Sets the device where the event originated.
    * device: device(Gdk::Device)
    * Returns: device

--- set_device(device)

    Same as Gdk::EventMotion#device=.
    * device: device(Gdk::Device)
    * Returns: self

--- x_root

    Gets the x coordinate of the pointer relative to the root of the screen. 
    * Returns: the x coordinate of the pointer relative to the root of the screen

--- x_root=(x_root)

    Sets the x coordinate of the pointer relative to the root of the screen. 
    * x_root: the x coordinate of the pointer relative to the root of the screen
    * Returns: x_root

--- set_x_root(x_root)

    Same as Gdk::EventMotion#x_root=.
    * x_root: the x coordinate of the pointer relative to the root of the screen
    * Returns: self

--- y_root

    Gets the y coordinate of the pointer relative to the root of the screen. 
    * Returns: the y coordinate of the pointer relative to the root of the screen

--- y_root=(y_root)

    Sets the y coordinate of the pointer relative to the root of the screen. 
    * y_root: the y coordinate of the pointer relative to the root of the screen
    * Returns: y_root

--- set_y_root(y_root)

    Same as Gdk::EventMotion#y_root=.
    * y_root: the y coordinate of the pointer relative to the root of the screen
    * Returns: self

--- axes=

     * Returns: self: ((*FIXME*))

--- request

     * Returns: self: ((*FIXME*))

== See Also

== ChangeLog

- ((<Masao>))
