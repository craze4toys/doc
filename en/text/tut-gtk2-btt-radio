= Buttons and Toggles
{{link "tut-gtk2-btt-check", "tut-gtk2-btt", "tut-gtk", nil}}
{{image_right("btt-radio.png")}}

== Radio Button


{{br}}

As you know by now the Gtk::RadioButton is also derived from Gtk::ToggleButton. Therefore also here we inherit all the Toggle Button functionality. Radio buttons are toggles that are grouped together. As such they act mutually exclusive i.e.: only a single button can be pressed, or be activated. Thus when one radio button is selected, others are deselected. Though normally you would not bound them to click events, you can if you have a need for it. Every radio button in a group is connected to the toggled signal. When selected (clicked), only two buttons will emit the "toggled" signal, namely the one that was just selected and the one that got deselected. You must connect every radio button in a group to this (toggled) signal if you intend to catch it. Most often however you will use the state of the button instead of signals. You can see that it all works automatically without you worrying about events and signals in the following example program.

 #!/usr/bin/env ruby

 require 'gtk2'

 window = Gtk::Window.new(Gtk::Window::TOPLEVEL)
 window.set_title  "Radio Buttons"
 window.border_width = 10
 window.signal_connect('delete_event') { Gtk.main_quit }

 radio1 = Gtk::RadioButton.new("_I want to be clicked!")
 radio2 = Gtk::RadioButton.new(radio1, "_Click me instead!")
 radio3 = Gtk::RadioButton.new(radio1, "No! Click _me!")
 radio4 = Gtk::RadioButton.new(radio1, "_No! Click me instead!")

 vbox = Gtk::VBox.new(false, 5)
 vbox.pack_start(radio1, false, true, 0)
 vbox.pack_start(radio2, false, true, 0)
 vbox.pack_start(radio3, false, true, 0)
 vbox.pack_start(radio4, false, true, 0)

 window.add(vbox)
 window.show_all
 Gtk.main
