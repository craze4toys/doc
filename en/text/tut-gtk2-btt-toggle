= Buttons and Toggles
{{link "tut-gtk2-packing-tables-demo", "tut-gtk2-btt", "tut-gtk", "tut-gtk2-btt-check"}}

== Toggle Button
{{br}}
{{image_right("btt-toggle.png")}}
{{br}}

Toggle buttons widget is of a type Button. After it is clicked it holds its "active" or "inactive" state. The "active" state is shown as pressed down. Clicking an active toggle button will cause it to return to its normal state. As you can see from the listing the state is a property of the Widget, hence it is controlled by Widget instance method Gtk::Widget#sensitive. You can obtain a state of a Widget object (w) by querying it via "Gtk::ToggleButton#active?" method. At this point it should be clear that since ToggleButton inherits state properties from Widgets it may be prudent to check out constants that pertain to Widget state - they can be found in Gtk documentation (Gtk::Widget) under the heading GtkWidgetFlags.    

There are two widgets derived from ToggleButton: Gtk::CheckButton and Gtk::RadioButton.


 #!/usr/bin/env ruby

 require 'gtk2'
 def toggle_em(w, other_tgg)
   # Gtk::Widget#sensitive=boolean |or #set_sensitive(boolean)
   other_tgg.sensitive = w.active? ? false : true
 end

 window = Gtk::Window.new(Gtk::Window::TOPLEVEL)
 window.set_title  "Toggle Buttons"
 window.border_width = 10
 window.signal_connect('delete_event') { Gtk.main_quit }

 vbox = Gtk::VBox.new(true, 5)
 toggle1 = Gtk::ToggleButton.new("_Deactivate the bottom button")
 toggle2 = Gtk::ToggleButton.new("_No deactivate the above button")

 toggle1.signal_connect( "toggled" ) { |w| toggle_em(w, toggle2) }
 toggle2.signal_connect( "toggled" ) { |w| toggle_em(w, toggle1) }

 vbox.pack_start_defaults(toggle1)
 vbox.pack_start_defaults(toggle2)

 window.add(vbox)
 window.show_all
 Gtk.main
