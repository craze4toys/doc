= Gst::Element Properties
{{link("tut-gst-elements-create", nil, "tut-gst", "tut-gst-plugins")}}

A Gst::Element can have several properties which are implemented using standard GLib::Object properties. The usual GLib::Object methods to query, set and get property values and GLib::ParamSpecs are therefore supported.

Every Gst::Element inherits at least one property of its parent Gst::Object: the "name" property. This is the name you provide to the methods Gst::ElementFactory.make or Gst::ElementFactory#create. You can get and set this property using the methods Gst::Object#set_name, Gst::Object#name= and Gst::Object#name.

You don't need to access directly to the GLib::Object property mechanism, since Ruby/GLib automatically provides accessors methods for this in your object (in this case, based on Gst::Object).

Most plugins provide additional properties to provide more information about their configuration or to configure the element.  (({gst-inspect})) is a useful tool to query the properties of a particular element, it will also use property introspection to give a short explanation about the function of the property and about the parameter types and ranges it supports.
