= Une version avancée de Bonjour Monde

{{image_right("bonjourmonde2.png")}}

Jetons ici un rapide coup d'oeil à une version avancée de Bonjour Monde, qui contient de meilleurs exemples de bloc de code de rappel.

Ceci va également introduire notre prochaine section, dédiée au paquetage de composants.

  #!/usr/bin/env ruby

  # Initialise Ruby/GTK2, comme d'habitude.
  require 'gtk2'

  # Un clic sur un bouton appelera cette méthode.
  def callback(widget)
    # Affiche la propriété 'label' du composant.
    # Consultez la référence de l'API pour plus d'informations.
    puts "Bonjour encore - #{widget.label}(#{widget}) a été actionné."
  end

  # Crée la fenêtre.
  window = Gtk::Window.new

  # Spécifie le titre et la bordure de la fenêtre.
  window.title = "Boujour Monde v2"
  window.border_width = 10

  # Ce programme se terminera dès la réception de l'évènement 'delete_event'.
  window.signal_connect('delete_event') do
    Gtk.main_quit
    false
  end

  # Nous créons une boîte pour y paqueter des composants.  
  # Ceci est décrit en détails dans la prochaine section.
  # La boîte n'est pas vraiment visible, elle est juste utilisée comme un outil
  # pour arranger les composants.
  box1 = Gtk::HBox.new(false, 0)

  # Insère la boîte dans la fenêtre principale.
  window.add(box1)

  # Crée un nouveau bouton étiquetté "Bouton 1".
  button1 = Gtk::Button.new("Bouton 1")

  # Maintenant, lorsque le bouton sera actionné, nous appelerons 
  # la méthode 'callback' en lui passant une référence vers le
  # "Bouton 1" en paramêtre.
  button1.signal_connect( "clicked" ) do |w|
    callback(w)
  end

  # A la place d'utiliser window.add, nous paquetons le bouton dans la boîte
  # invisible, qui a elle été paquetée dans la fenêtre.
  box1.pack_start(button1, true, true, 0)

  # Répetons la même chose pour créer un second bouton.
  button2 = Gtk::Button.new("Button 2")

  # Appelle la même méthode 'callback' avec un argument différent, car nous lui
  # passons une référence vers le "Bouton 2" cette fois ci.
  button2.signal_connect("clicked") do |w|
    callback(w)
  end

  # Nous paquetons le second bouton dans la boîte également.
  box1.pack_start(button2, true, true, 0)

  # Vous pouvez appeler la méthode show de chaque composant, comme ceci:
  #   button1.show
  #   button2.show
  #   box1.show
  #   window.show 
  window.show_all
  Gtk.main

Comme la première version de Bonjour Monde, vous remarquerez qu'il n'est toujours pas facile de quitter le programme, vous devez utiliser votre gestionnaire de fenêtres, ou la ligne de commande pour le tuer.

Un bon exercice pour le lecteur serait de rajouter un troisième bouton "Quitter" qui fermera le programme.

Vous jouerez avec les options de Gtk::Box#pack_start dans la prochaine section.  
Essayez de redimensionner la fenêtre, et d'observer le composant.
