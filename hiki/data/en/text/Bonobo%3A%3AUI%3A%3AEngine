= class Bonobo::UI::Engine

== Object Hierarchy

* Object
  * GLib::Instantiatable
    * GLib::Object
      * GLib::InitiallyUnowned
        * Gtk::Object
          * Gtk::Widget
            * Gtk::Container
              * Gtk::Bin
                * Gtk::Window
                  * Bonobo::UI::Engine

== Class Methods

--- Bonobo::UI::Engine.new

     * Returns: self: ((*FIXME*))

== Instance Methods

--- accel_group

     * Returns: self: ((*FIXME*))

--- add_child

    See Gtk::Buildable#add_child.

--- add_popup

     * Returns: self: ((*FIXME*))

--- builder_name

    See Gtk::Buildable#builder_name.

--- builder_name=

    See Gtk::Buildable#builder_name=.

--- config_get_path

     * Returns: self: ((*FIXME*))

--- config_set_path

     * Returns: self: ((*FIXME*))

--- construct

     * Returns: self: ((*FIXME*))

--- construct_child

    See Gtk::Buildable#construct_child.

--- contents

     * Returns: self: ((*FIXME*))

--- contents=

     * Returns: self: ((*FIXME*))

--- deregister_component

     * Returns: self: ((*FIXME*))

--- deregister_dead_components

     * Returns: self: ((*FIXME*))

--- get_internal_child

    See Gtk::Buildable#get_internal_child.

--- name

     * Returns: self: ((*FIXME*))

--- name=

     * Returns: self: ((*FIXME*))

--- ref_accessible

    See Atk::Implementor#ref_accessible.

--- remove_popup

     * Returns: self: ((*FIXME*))

--- set_buildable_property

    See Gtk::Buildable#set_buildable_property.

--- set_builder_name

    See Gtk::Buildable#set_builder_name.

--- set_contents

     * Returns: self: ((*FIXME*))

--- set_name

     * Returns: self: ((*FIXME*))

--- set_ui_container

     * Returns: self: ((*FIXME*))

--- set_win_name(win_name)

    Same as win_name=.
     * win_name: Name of the window - used for configuration serialization
     * Returns: self

--- ui_container

     * Returns: self: ((*FIXME*))

--- ui_container=

     * Returns: self: ((*FIXME*))

--- ui_engine

     * Returns: self: ((*FIXME*))

--- win_name

    Gets the Name of the window - used for configuration serialization.
     * Returns: Name of the window - used for configuration serialization

--- win_name=(win_name)

    Sets the Name of the window - used for configuration serialization.
     * win_name: Name of the window - used for configuration serialization
     * Returns: win_name

== Properties

--- win-name: String (Read/Write)

    Name of the window - used for configuration serialization.

== See Also

== ChangeLog


