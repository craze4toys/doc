= class GLib::UnixInputStream

GLib::UnixInputStream implements GInputStream for reading from a Unix file
descriptor, including asynchronous operations. The file descriptor must be
selectable, so it doesnâ€™t work with opened files.

Note that Glib::UnixInputStream belongs to the Unix-specific GIO interfaces.

== Object Hierarchy

* Object
  * GLib::Instantiatable
    * GLib::Object
      * GLib::InputStream
        * GLib::UnixInputStream

== Class Methods

--- GLib::UnixInputStream.new(fd, close_fd = false)

     Creates a new GLib::UnixInputStream for the given ((|fd|)).

     If ((|close_fd|)) is true, the file descriptor will be closed when the
     stream is closed.

     * fd: the file descriptor
     * close_fd: Whether or not the file descriptor should be closed when the
       stream is closed
     * Returns: a new GLib::UnixInputStream

== Instance Methods

--- close_fd=(close_fd)

     Same as GLib::UnixInputStream#set_close_fd.

     * Returns: ((|close_fd|))

--- close_fd?

     Checks if the file descriptor should be closed when the stream is closed.

     * Returns: true if the file descriptor should be closed when the stream is
       closed

--- fd

     Gets the file descriptor to read from.

     * Returns: The file descriptor to read from

--- set_close_fd(close_fd)

     Sets whether or not the file descriptor should be closed when the stream
     is closed.

     * close_fd: true if file descriptor should be closed when the stream is closed
     * Returns: self

== Properties

--- close-fd: true or false (Read/Write)

     Whether or not the file descriptor should be closed when the stream is
     closed


--- fd: Integer (Read/Write)

    The file descriptor to read from

== See Also

== ChangeLog


