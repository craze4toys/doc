= Pango Text Attribute Markup Language
Frequently, you want to display some text to the user with attributes applied to part of the text (for example, you might want bold or italicized words). With the base Pango interfaces, you could create a Pango::AttrList and apply it to the text; the problem is that you'd need to apply attributes to some numeric range of characters, for example "characters 12-17." This is broken from an internationalization standpoint; once the text is translated, the word you wanted to italicize could be in a different position. 

The solution is to include the text attributes in the string to be translated. Pango provides this feature with a small markup language. You can parse a marked-up string into the string text plus a Pango::AttrList using the function Pango.parse_markup. 

A simple example of a marked-up string might be: "<span foreground="blue" size="x-large">Blue text</span> is <i>cool</i>!" 

The root tag of a marked-up document is <markup>, but Pango.parse_markup allows you to omit this tag, so you will most likely never need to use it. The most general markup tag is <span>, then there are some convenience tags. <span> has the following attributes: 

=== <span> attributes

--- font_desc 
    A font description string, such as "Sans Italic 12"; note that any other span attributes will override this description. So if you have "Sans Italic" and also a style="normal" attribute, you will get Sans normal, not italic. 
 
--- font_family
    A font family name 

--- face 
    Synonym for font_family 

--- size 
    Font size in 1024ths of a point, or one of the absolute sizes 'xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large', or one of the relative sizes 'smaller' or 'larger'. If you want to specify a absolute size, it's usually easier to take advantage of the ability to specify a partial font description using 'font_desc'; you can use font_desc='12.5' rather than size='12800'. 

--- style
    One of 'normal', 'oblique', 'italic' 

--- weight
    One of 'ultralight', 'light', 'normal', 'bold', 'ultrabold', 'heavy', or a numeric weight 

--- variant 
    'normal' or 'smallcaps' 

--- stretch
    One of 'ultracondensed', 'extracondensed', 'condensed', 'semicondensed', 'normal', 'semiexpanded', 'expanded', 'extraexpanded', 'ultraexpanded' 

--- foreground
    An RGB color specification such as '#00FF00' or a color name such as 'red' 

--- background
    An RGB color specification such as '#00FF00' or a color name such as 'red' 

--- underline
    One of 'single', 'double', 'low', 'none' 

--- underline_color
    The color of underlines; an RGB color specification such as '#00FF00' or a color name such as 'red' 

--- rise
    Vertical displacement, in 10000ths of an em. Can be negative for subscript, positive for superscript. 
 
--- strikethrough
    'true' or 'false' whether to strike through the text 
 
--- strikethrough_color
    The color of strikethrough lines; an RGB color specification such as '#00FF00' or a color name such as 'red' 

--- fallback
    'true' or 'false' whether to enable fallback. If disabled, then characters will only be used from the closest matching font on the system. No fallback will be done to other fonts on the system that might contain the characters in the text. Fallback is enabled by default. Most applications should not disable fallback. 
 
--- lang
    A language code, indicating the text language 


=== Convenience tags
The following convenience tags are provided: 


--- b 
    Bold 

--- big
    Makes font relatively larger, equivalent to <span size="larger"> 
 
--- i
    Italic 
 
--- s
    Strikethrough 

--- sub
    Subscript 

--- sup
    Superscript 

--- small
    Makes font relatively smaller, equivalent to <span size="smaller"> 

--- tt
    Monospace font 

--- u
    Underline 


== ChangeLog
* 2005-03-29 Added. - ((<Masao>))
