= class Gtk::PrintJob

Represents a print job

== Object Hierarchy
* Object
  * GLib::Instantiatable
    * GLib::Object
      * Gtk::PrintJob

== Class Methods
--- Gtk::PrintJob.new(title, printer, settings, page_setup)
     Creates a new Gtk::PrintJob.

     * title: the job title
     * printer: a Gtk::Printer
     * settings: a Gtk::PrintSettings
     * page_setup: a Gtk::PageSetup
     * Returns: a new Gtk::PrintJob

== Instance Methods
--- send(&block)
     Sends the print job off to the printer.

     * block: function to call when the job completes or an error occurs.
       passed argumets are PrintJob and exception or PrintJob and nil.
     * Returns: nil

--- set_source_file(filename)
     Make the Gtk::PrintJob send an existing document to the
     printing system. The file can be in any format
     understood by the platforms printing system (typically
     PostScript, but on many platforms PDF may work
     too). See Gtk::Printer#accepts_pdf? and
     Gtk::Printer#accepts_ps?.

     * filename: the file to be printed
     * Returns: self
--- source_file=(filename)
     Same as #set_source_file.

     * Returns: nil

--- status
     Gets the status of the print job.

     * Returns: the status of self

--- surface
     Gets a cairo surface onto which the pages of
     the print job should be rendered.

     * Returns: the cairo surface of self

--- page_setup
    Gets the Page Setup.
     * Returns: Page Setup
--- page_setup=(page_setup)
    Sets the Page Setup.
     * page_setup: Page Setup
     * Returns: page_setup
--- set_page_setup(page_setup)
    Same as page_setup=.
     * page_setup: Page Setup
     * Returns: self

--- printer
    Gets the Printer to print the job to.
     * Returns: Printer to print the job to
--- printer=(printer)
    Sets the Printer to print the job to.
     * printer: Printer to print the job to
     * Returns: printer
--- set_printer(printer)
    Same as printer=.
     * printer: Printer to print the job to
     * Returns: self

--- settings
    Gets the Printer settings.
     * Returns: Printer settings
--- settings=(settings)
    Sets the Printer settings.
     * settings: Printer settings
     * Returns: settings
--- set_settings(settings)
    Same as settings=.
     * settings: Printer settings
     * Returns: self

--- title
    Gets the Title of the print job.
     * Returns: Title of the print job
--- title=(title)
    Sets the Title of the print job.
     * title: Title of the print job
     * Returns: title
--- set_title(title)
    Same as title=.
     * title: Title of the print job
     * Returns: self

--- track_print_status?
    Gets the true if the print job will continue to emit status-changed signals after the print data has been sent to the printer or print server..
     * Returns: true if the print job will continue to emit status-changed signals after the print data has been sent to the printer or print server.
--- track_print_status=(track_print_status)
    Sets the true if the print job will continue to emit status-changed signals after the print data has been sent to the printer or print server..
     * track_print_status: true if the print job will continue to emit status-changed signals after the print data has been sent to the printer or print server.
     * Returns: track_print_status
--- set_track_print_status(track_print_status)
    Same as track_print_status=.
     * track_print_status: true if the print job will continue to emit status-changed signals after the print data has been sent to the printer or print server.
     * Returns: self

== Properties
--- page-setup: Gtk::PageSetup (Read/Write)
    Page Setup

--- printer: Gtk::Printer (Read/Write)
    Printer to print the job to

--- settings: Gtk::PrintSettings (Read/Write)
    Printer settings

--- title: String (Read/Write)
    Title of the print job

--- track-print-status: true or false (Read/Write)
    true if the print job will continue to emit status-changed signals after the print data has been sent to the printer or print server.

== Signals
--- status-changed: self
    Gets emitted when the status of a job changes. The signal handler
    can use Gtk::PrintJob#status to obtain the new status.
     * self: the Gtk::PrintJob object on which the signal was emitted

== See Also

== ChangeLog

* 2006-07-10: updated for 2.10. - ((<kou>))

- ((<kou>))
