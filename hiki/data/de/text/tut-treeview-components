= Komponenten: Model, Renderer, Column, View
{{link "tut-treeview-intro", nil, "tut-treeview", "tut-treeview-model"}}

Das wichtigste Konzept, auf dem Gtk::TreeView aufbaut, ist das der vollständigen Trennung zwischen Daten und ihrer Darstellung auf dem Bildschirm. Dieses Konzept wird im Allgemeinen als Model/View/Controller-Design (MVC) bezeichnet. Daten verschiedener Typen (Strings, Zahlen, Grafiken, etc.) werden in einem "Model" gespeichert. Der "View"-Komponente wird dann mitgeteilt, welche Daten an welcher Stelle und auf welche Weise angezeigt werden sollen. Einer der Vorteile dieser Vorgehensweise ist, dass man mehrere Ansichten haben kann mit denen die gleichen Daten (beispielsweise ein Verzeichnisbaum) auf verschiedene Arten oder mehrere Male angezeigt werden können, wobei alle diese Ansichten auf nur eine Kopie der Daten zurückgreifen. Dadurch lassen sich redundante Datenmengen und Programmieraufwand vermeiden, wenn die gleichen Daten in verschiedenen Zusammenhängen verwendet werden. Außerdem gilt, dass wenn die Daten in dem Model aktualisiert werden, automatisch alle Ansichten aktualisiert werden.

Während also Gtk::TreeModel verwendet werden kann, um Daten zu speichern, gibt es andere Komponenten, mit denen die in einem Gtk::TreeView angezeigten Daten und die Art ihrer Darstellung zu ermitteln oder zu ändern. Diese Komponenten sind Gtk::TreeViewColumn und Gtk::CellRenderer. Ein Gtk::TreeView besteht aus TreeView-Spalten. Das sind die Spalten, die der Benutzer zur Laufzeit sehen kann. Diese Spalten haben einen klickbaren Spaltenkopf mit einem Spaltentitel, der ausgeblendet werden kann, und sie können vergrößert und sortiert werden. TreeView-Spalten zeigen keine Daten an, sie werden nur als ein Mittel zum repräsentieren der User-Seite des TreeViews (für Sortierung und andere Dinge) genutzt und dienen als Anordnungswidgets für die Komponenten, die das eigentliche Anzeigen der Daten auf dem Bildschirm übernehmen (Objekte der Gtk::CellRenderer-Familie). Es gibt eine Menge von verschiedenen CellRenderer-Typen, die jeweils das Darstellen von bestimmten Datentypen (Strings, Pixbufs oder ToggleButtons) übernehmen. Mehr darüber erfahren Sie später in diesem Tutorial.

CellRenderer werden in die TreeView-Spalten eingefügt, um die Daten anzuzeigen. Eine TreeView-Spalte muss mindestens einen CellRenderer enthalten, es können aber auch mehrere CellRenderer einer Spalte zugewiesen werden. Wenn Sie zum Beispiel eine Spalte mit Dateinamen anzeigen möchten, in der jeder Dateiname ein kleines Icon zu seiner Linken Seite hat, würden Sie einen Gtk::CellRendererPixbuf und einen Gtk::CellRendererText nacheinander in die entsprechende Spalte einfügen.
CelRenderer in einer TreeView-Spalte anzuordnen ist vergleichbar mit dem Anordnen von Widgets in einem Gtk::HBox.