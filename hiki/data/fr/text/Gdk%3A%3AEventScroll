= class Gdk::EventScroll
Generated from button presses for the buttons 4 to 7. Wheel mice are usually configured to generate button press events for buttons 4 and 5 when the wheel is turned. 

== Object Hierarchy
* Object
  * GLib::Boxed
    * Gdk::Event
      * Gdk::EventAny
        * Gdk::EventScroll

== Class Methods
--- Gdk::EventScroll.new(type = Gdk::Event::SCROLL)
    Creates a new event of the given type. All fields are set to 0. ((* Since 2.2 *))
    * type: Gdk::Event::SCROLL
    * Returns: a new Gdk::EventScroll.

== Instance Methods
--- time
    Gets the time of the event in milliseconds. 
    * Returns: the time of the event in milliseconds
--- time=(time)
    Sets the time of the event in milliseconds.
    * time: the time of the event in milliseconds
    * Returns: time
--- set_time(time)
    Same as Gdk::EventScroll#time=.
    * time: the time of the event in milliseconds
    * Returns: self

--- x
    Gets the x coordinate of the pointer relative to the window. 
    * Returns: the x coordinate of the pointer relative to the window
--- x=(x)
    Sets the x coordinate of the pointer relative to the window. 
    * x: the x coordinate of the pointer relative to the window
    * Returns: x
--- set_x(x)
    Same as Gdk::EventScroll#x=.
    * x: the x coordinate of the pointer relative to the window
    * Returns: self

--- y
    Gets the y coordinate of the pointer relative to the window. 
    * Returns: the y coordinate of the pointer relative to the window
--- y=(y)
    Sets the y coordinate of the pointer relative to the window. 
    * y: the y coordinate of the pointer relative to the window
    * Returns: y
--- set_y(y)
    Same as Gdk::EventScroll#y=.
    * y: the y coordinate of the pointer relative to the window
    * Returns: self

--- state
    Gets the bit-mask representing the state of the modifier keys (e.g. Control, Shift and Alt) and the pointer buttons. See ((<GdkModifierType|Gdk::Window#GdkModifierType>)). 
    * Returns: ((<GdkModifierType|Gdk::Window#GdkModifierType>))
--- state=(state)
    Sets a bit-mask representing the state of modifier keys.
    * state: a bit-mask of ((<GdkModifierType|Gdk::Window#GdkModifierType>)).
    * Returns: self
--- set_state(state)
    Same as Gdk::EventScroll#state=.
    * state: a bit-mask of ((<GdkModifierType|Gdk::Window#GdkModifierType>)).
    * Returns: self

--- direction
    Gets the direction to scroll to (one of Gdk::EventScroll::UP, Gdk::EventScroll::DOWN, Gdk::EventScroll::LEFT and Gdk::EventScroll::RIGHT). 
    * Returns: a ((<GdkScrollDirection|Gdk::EventScroll#GdkScrollDirection>))
--- direction=(direction)
    Sets the direction to scroll to.
    * direction: a ((<GdkScrollDirection|Gdk::EventScroll#GdkScrollDirection>))
    * Returns: direction
--- set_direction(direction)
    Same as Gdk::EventScroll#direction=.
    * direction: a ((<GdkScrollDirection|Gdk::EventScroll#GdkScrollDirection>))
    * Returns: self

--- device
    Gets the device where the event originated. 
    * Returns: device(Gdk::Device)
--- device=(device)
    Sets the device where the event originated.
    * device: device(Gdk::Device)
    * Returns: device
--- set_device(device)
    Same as Gdk::EventScroll#device=.
    * device: device(Gdk::Device)
    * Returns: self

--- x_root
    Gets the x coordinate of the pointer relative to the root of the screen. 
    * Returns: the x coordinate of the pointer relative to the root of the screen
--- x_root=(x_root)
    Sets the x coordinate of the pointer relative to the root of the screen. 
    * x_root: the x coordinate of the pointer relative to the root of the screen
    * Returns: x_root
--- set_x_root(x_root)
    Same as Gdk::EventScroll#x_root=.
    * x_root: the x coordinate of the pointer relative to the root of the screen
    * Returns: self

--- y_root
    Gets the y coordinate of the pointer relative to the root of the screen. 
    * Returns: the y coordinate of the pointer relative to the root of the screen
--- y_root=(y_root)
    Sets the y coordinate of the pointer relative to the root of the screen. 
    * y_root: the y coordinate of the pointer relative to the root of the screen
    * Returns: y_root
--- set_y_root(y_root)
    Same as Gdk::EventScroll#y_root=.
    * y_root: the y coordinate of the pointer relative to the root of the screen
    * Returns: self

== Constants
=== GdkScrollDirection
--- UP
    the window is scrolled up. 
--- DOWN
    the window is scrolled down. 
--- LEFT
    the window is scrolled to the left.
--- RIGHT
    the window is scrolled to the right.


- ((<Masao>))
