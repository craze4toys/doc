= Funzionamento dei segnali e callback

prima di vedere il programma "Ciao mondo!" in dettaglio, noi dovremo studiare un po' come GTK gestisce i segnali e i callback.

Nello stesso modo in cui il tuo sistema consegna un segnale come lo spegnimento
((-Nota che i segnali GTK non sono considerati in nessun modo come i segnali UNIX. Lo strumento GTK è stato concepito per essere indipendente dal sistema sottostante. -)), GTK manda un segnale al ciclo principale (Gtk.main) quando accade un evento speciale.
Dopodichè Il ciclo principale richiamerà una funzione appropriata del widget.

Fintanto che un segnale non è ricevuto, il ciclo principale rimane in attesa.

Per dire a un widget GTK che deve prendere un segnale specifico e poi eseguire il codice appropriato, dobbiamo impostare un gestore di segnali.

Questo può essere fatto con il metodo GLib::Instantiatable#signal_connect method, che è parte della libreria Ruby/GLib.
(Non dimenticare che GTK è costruito su GLib):

  GLib::Instantiatable#signal_connect("signal name") do
      # Codice da eseguire quando "signal name" sarà preso.
  end

GLib::Instantiatable#signal_connect ha bisogno di 2 cose:
* Il nome del segnale che sarà preso;
* un codice di blocco che sarà eseguito sulla ricezione del segnale dato.

Il codice di blocco può prendere un parametro opzionale come i seguenti:

  GLib::Instantiatable#signal_connect("signal name") do |w|
      # ...
  end

I widget che contengono il segnale saranno perciò sostituiti dal parametro w.
