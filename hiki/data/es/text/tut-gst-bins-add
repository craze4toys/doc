= Añadiendo elementos a un contenedor
{{link("tut-gst-bins-create", nil, "tut-gst", "tut-gst-bins-custom")}}

Los elementos se añaden a un contenedor como muestra el siguiente ejemplo:

  element = Gst::ElementFactory.make("mpg123", "decoder")

  bin = Gst::Bin.new
  bin.add(element) 
 
Contenedores e hilos se pueden agregar a otros contenedores a su vez. Esto permite crear contenedores anidados. Estos son contenedores de alto nivel y están directamente enlazados al "scheduler".

Para obtener un elemento de un contenedor se usa:

  element = bin.get_by_name("decoder")

Un atajo adecuado para Gst::Bin#get_by_name es Gst::Bin#[]:

  element = bin["decoder"]

Se puede ver que el nombre del elemento es muy práctico para obtener el elemento de su contenedor. Gst::Bin#get_by_name buscará recursivamente entre sus contenedores anidados.

Para pbtener una lista de los elementos de un contenedor, se usa Gst::Bin#elements o en su forma iterativa Gst::Bin#each_element:

  bin.each_element do |element|
    puts "element in bin: " + element.name
  end

Para eliminar un elemento de un contenedor:

  bin.remove(element)

Para añadir varios elementos a un contenedor al mismo tiempo, basra usar Gsr::Bin#add con tantos parámetros como se necesite:

  bin.add(element1, element2, element3)
