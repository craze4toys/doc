= Más sobre tipos MIME
{{link("tut-gst-helloworld-problem", nil, "tut-gst", "tut-gst-types")}}

GStreamer usa tipos MIME para identificar los diferentes tipos de datos que pueden manejar los elementos. Son mecanismos de alto nivel que asegura que todo el mundo habla del mismo tipo de dato.

Un tipo MIME (Multipurpose Internet Mail Extension) es un par de strings que identifican a un cierto tipo de datos.

Por ejemplo:

* (({audio/raw})) : pistas de audio raw
* (({audio/mpeg})) : audio MPEG
* (({video/mpeg})) : vídeo MPEG

Un Gst::Element debe asociar un tipo MIME a sus puertos de entrada y salido cuando se carga en el sistema. GStreamer conoce los diferentes elementos y qué tipo de datos envían y reciben. Esto permite que la creacíon de elementos sea muy dinámica y ampliable como veremos más adelante.

Como se ha visto en el capítulo anterior, los tipos MIME se agregan a la estructura de capacidades (Gst::Caps) de un Gst::Pad.

En el ejemplo holamundo los elementos que se han contruido tienen los siguientes tipos MIME asociados con sus puertos de entrada y salida:

{{image_left("mime-world.png")}}
{{br}}

Veremos como se puede  crear un elemento basado en el tipo MIME de sus pertos de entrada y salida.De esta forma el usuario final tendrá la posibilidad de elegir su decodificador de audio/mpeg favorito sin que el programador tenga que preocuparse de ello.

Los tipos de los puertos de entrada y salida también posiblitan 'autoconectar' una Gst::Pipeline. Tendremos la posibilidad de decir: "construyeme una tubería que realize la conversión de audio/mpeg a audio/raw".

((*Nota*)) La librería básica GStreamer no pretende solventar todos tus problemas de autoconexión. Deja las decisiones difíciles al programador de la aplicación, cuando es necesario.
