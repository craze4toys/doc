= "Pads" Fantasmas
{{link("tut-gst-bins-custom", nil, "tut-gst", "tut-gst-elements-state")}}

Você pode ver na figura seguinte como um "bin" não tem "pads" próprios. Aí os "pads fantasmas" entram em cena.

{{image_left("en:bin-element-noghost.png")}}
{{br}}

Um "pad" fantasma é um "pad" de algum elemento no "bin" que foi promovido para o "bin". Dessa maneira, o "bin" também tem um "pad".  O "bin" se torna apenas outro elemento com um "pad" e você pode então usá-lo como qualquer outro elemento. Isso é uma funcionalidade bastante importante para criar "custom bins".

{{image_left("en:bin-element-ghost.png")}}
{{br}}

A figura acima é uma representação de um "pad" fantasma. O "pad" de entrada ("sink") do elemento um é agora também um "pad" do "bin".

"Pads" fantasmas podem na verdade ser adicionados a todos os objetos de Gst::Element e não apenas a objetos de Gst::Bin. Use o exemplo de código a seguir para adicionar um "pad" fantasma a um "bin": 

  element = Gst::ElementFactory.make("mad")
  bin = Gst::Bin.new

  bin.add(element)

  bin.add_ghost_pad(element.get_pad("sink"), "sink")

No exemplo acima, o "bin" agora também tem um "pad": o "pad" chamado "sink" do elemento fornecido.

A gente pode agora, por exemplo, conectar o "pad" de origem de um elemento "firesrc" a um "bin" com:

  filesrc = Gst::ElementFactory.make("filesrc")
  filesrc >> bin