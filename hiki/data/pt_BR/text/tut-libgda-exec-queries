= Fazendo Queries
{{link("tut-libgda-build-queries", nil, "tut-libgda", "tut-libgda-datamodels")}}

== Fazendo "Não"-Queries

Não-queries são queries que não retornam dados, apenas o número de linhas afetadas, como um DELETE ou um UPDATE. 

A gente usa Gda::Connection#execute_non_query para fazer esse tipo de querie:

  def execute_sql_non_query(conn, texto)
      command = Gda::Command.new(texto, Gda::Command::TYPE_SQL, Gda::Command::STOP_ON_ERRORS)
      conn.execute_non_query(command)
  end

Gda::Connection#execute_non_query returna o número de linhas afetadas pelo comando executado, ou -1 em um erro.

== Fazendo Queries Normais

Queries normais são queries que retornam dados ("models" de dados). Você tem duas maneiras de fazer isso:

:Gda::Connection#execute_single_command
 Use esse método quando você quiser invocar apenas um único comando. Essa é a maneira recomendada.

 Esse método retorna uma referência para um objeto Gda::DataModel. 
:Gda::Connection#execute_command
 Use esse método quando você quiser invocar várias sentenças separadas por vírgula, embutidas em um único objeto Gda::Command.

 Esse método retorna um array de objetos Gda::DataModel.

aqui você vê um exemplo:

  def execute_sql_command(conn, texto)
      command = Gda::Command.new(texto, Gda::Command::TYPE_SQL, Gda::Command::STOP_ON_ERRORS)
      array = conn.execute_command(command)
      array.each { |datamodel| show_table(datamodel) }
  end
