= ((<Gtk::TreeModels|Gtk::TreeModel>)) para Armazenamento de Dados: Gtk::ListStore e Gtk::TreeStore
{{link "tut-treeview-components", nil, "tut-treeview", "tut-treeview-model-data"}}

É importante saber o que o Gtk::TreeModel é e o que ele não é. Gtk::TreeModel é basicamente apenas uma 'interface' para o armazenador de dados, significando que ele é um conjunto padronizado de métodos que permitem um componente Gtk::TreeView (e o programador da aplicação) a perguntar certas características de um armazenador de dados, por exemplo, quantas linhas existem, quais linhas tem filhos, e quantos filhos uma linha em particular tem. Ele também provém métodos para recuperar os dados de um armazenador de dados, e  diz para o "tree view" que tipo de dado está armazenado no "model". Todo armazenador de dados precisa implementar a interface de  Gtk::TreeModel e prover esses métodos. O Gtk::TreeModel sozinho provém apenas uma maneira de perguntar as características de um armazenador de dados e a recuperar os dados existentes, ele não provém uma maneira de remover ou adicionar linhas para o armazenador. Isso é feito usando os métodos específicos do armazenador.

A Gtk+ vem com dois armazenadores de dados (models): Gtk::ListStore e Gtk::TreeStore. Como os nomes indicam, o Gtk::ListStore é usado para listas simples de itens de dados onde os itens não tem relações pai-filho de hierarquia, e o Gtk::TreeStore é usado para estruturas de dados como de árvore, onde os items podem ter relações pai-filho. Uma lista de arquivos em um diretório seria um exemplo de uma estrutura de lista simples, enquanto uma árvore de diretório seria um exemplo para uma estrutura de árvore. Uma lista é basicamente apenas um caso especial de uma árvore com nenhum dos itens tendo qualquer filho, assim alguém poderia usar um armazenador de árvore para manter uma lista simples de itens também. A única razão que pela qual o Gtk::ListStore existe é com a finalidade de prover uma interface mais fácil que não precisa lidar com relações pai-filho, e porque uma lista simples pode ser otimizada para o caso especial onde nenhum filho existe, o qual a torna mais rápida e eficiente.

As implementações de "model" de árvore como Gtk::ListStore e Gtk::TreeStore cuidarão do lado do "view" para você uma vez que você tenha configurado o Gtk::TreeView para mostrar o que você deseja. Se você mudar os dados em um armazenador, o "model" notificará o "tree view" e o seu visualizador de dados será atualizado. Se voc adicionar ou remover linhas, o "model" também será notificará o armazenador, e a sua linha aparecerá ou desaparecerá do visualizador também.
