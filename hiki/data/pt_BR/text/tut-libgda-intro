= Introdução
{{link(nil, nil, "tut-libgda", "tut-libgda-install")}}

== Sobre a GDA

ODBC e SQL são padrões estabelecidos. O problema é que o ODBC não especifica o protocolo e para alguns bancos de dados não existem drivers ODBC. Você pode usar RPC, TCP/IP, ou memória compartilhada e sinais para passar o pedido do cliente para o servidor. Então você tem que usar a biblioteca de ODBC específica do banco de dados. Essa biblioteca pode não estar disponível para a CPU ou o sistema operacional no qual o cliente está rodando.

A SQL não é também padronizada o suficiente, assim a compatibilidade de fonte não pode ser assegurada para todos os servidores de banco de dados. E para alguns servidores, a SQL não é nem possível (pense sobre LDAP).

A GDA tenta lidar com o problema de ODBC e ajudá-lo com o problema de SQL. Ela é um tipo de "middleware" (oou pode ser usa usada e uma camada de "middleware") para acessar fontes de dados diferentes. Ela oferece uma visualização de alto-nível de fontes de dados e tem alguns lugares onde você pode conectar acesso de baixo-nível ao banco de dados para tarefas especiais.

O Acesso de Dados do GNOME (GDA) é definido como um conjunto de interfaces de pluin. O nível de abstração fornecido pela GDA torna possível acessar qualquer tipo de fonte de dados, desde que um plugin que implemente essas interfaces e acesse essa fonte de dados em particular seja escrito.

Ela oferece um "wrapper" sobre as especifidades do banco de dados, assim tornando fácil para os programadores usar todo o poder provido por muitos RDBMSs sem nem mesmo conhecê-los. Ela vem com uma biblioteca para o cliente e o servidor, como uma implementação de C para essa arquitetura. Esse nível de abstração tornaria possível, um tempo depois, mudar toda a parte interna sem ter que modificar as aplicações que usam as bibliotecas.

Junto com essas bibliotecas (e arquivos "header" e "bindings" de linguagem para desenvolvimento associados), libgda inclui várias ferramentas e utilitários para ajudá-lo com a tarefa de desenvolver aplicações baseadas na libgda, assim como para automatizar algumas tarefas relacionadas a banco de dados.

A libgda é implementada para sistemas operacionais "UNIX -like" (incluindo Linux), e não depende de outras bibliotecas a não ser de libxml2 e Glib, o que a torna um sistema bastante leve, também ideal para sistemas com hardware limitado. Ela foi por um tempo parte do projeto GNOME-DB, e ainda é usada como a base para ele, mas ela foi separada dele para remover todas as dependências de GNOME e assim permitir que aplicações não-GNOME sejam desenvolvidas baseadas nela. 

== Sobre a Ruby/Libgda

Ruby é "a linguagem de scripting interpretada para programação orientada a objeto rápida e fácil". Ela tem uma sintaxe de exceções simples para gerenciamento de erros. Os operadores são sintaxes fáceis para métodos, pois você pode redefini-los facilmente. Ruby é uma verdadeira linguagem OO. Isso significa que tudo em Ruby é um objeto. Ruby é também "cross-platform", e rodará em muitos tipos de Unix, DOS, Windows, Mac, etc.

A Ruby/Libgda é uma ligação ("binding") para a linguagem Ruby usar a biblioteca GDA. Ela provê uma maneira para acessar em Ruby dados de todos os provedores suportados pela libgda. Ela é parte do projeto Ruby-GNOME2.