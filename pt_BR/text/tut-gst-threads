= Threads
{{link("tut-gst-types", nil, "tut-gst", "tut-gst-queues")}}

O GStreamer tem suporte para "multithreading" através do uso de objeto de Gst::Thread. Esse objeto é de fato um Gst::Bin especial que se tornará um thread quando for iniciado.

Para construir um novo thread, você fará algo como: 

  # cria o objeto de thread
  thread = Gst::Thread.new

  # adiciona alguns plugins aqui
  thread.add(funky_src, cool_effect)

  # conecta os elementos aqui
  ...

  # inicia a tocar
  thread.play

O programa acima criará um thread com dois elementos nele. Tão logo ele seja configurado para o estado Gst::Element::STATE_PLAYING, o thread iniciará a iteragir. Você nunca precisa iteragir explicitamente um thread.

== Restrições Colocadas no "Pipeline" por um Gst::Thread

Dentro do "pipeline", tudo é a mesma coisa como em qualquer outro "bin". A diferença fica nos limites do thread, na conexão entre o thread e o mundo externo (contendo o "bin"). Como o GStreamer é fundamentalmente orientado a "buffer" em vez de orientado a byte, a solução natural para esse problema é um elemento que pode "buffer" os "buffers" entre os threads, de uma maneira "thread-safe". Esse elemento é a fila (Gst::Queue), descrita mais completamente no capítulo chamado ((<"Queues"|tut-gst-queues>)). Não importa se a fila é colocada no "bin" contido ou no thread, mas ela precisa em um lado ou no outro para habilitar a comunicação "inter-thread".

== Quando Você Gostaria de Usar um Thread?

Se você está escrevendo uma aplicação de GUI, fazer o "bin" de nível superior um thread tornará a sua GUI mais responsiva. Se fosse um "pipeline", ela teria que ser iteragida pelo loop de evento da sua aplicação, o que aumentaria a latência entre os eventos (digamos, digitar no teclado) e resposta da GUI. Em adição, qualquer pequeno travamento na GUI atrasaria a iteração do "pipeline", o que (por exemplo) poderia causar pulos na saída da placa de som, se fosse um "pipeline" de áudio.

Um thread pode ser visualizado abaixo:

{{image_left("en:thread.png")}}
{{br}}

Um exemplo prático, você pode ler as fontes do nosso ((<Tocador de Audio Simples>)).