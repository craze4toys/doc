= Posicionamento Usando Tabelas
{{link "tut-gtk2-packing-demo", "tut-gtk2-packing-intro", "tut-gtk", "tut-gtk2-packing-tables-demo"}}

Vamos dar uma olhada em outra maneira de posicionamento: Tabelas. Elas podem ser extremamente úteis em certas situações.

Ao usar tabelas, a gente cria um grid no qual podem ser posicionados componentes. Os componentes podem ter quanto de espaço a gente especificar.

A primeira coisa para olhar, claro, é o construtor Gtk::Table.new:

  Gtk::Table.new(linhas, colunas, homogêneo) 

O primeiro argumento é o número de linhas ("rows") para fazer na tabela, enquanto o seguindo, obviamente, é o número de colunas.

O argumento homogêneo ("homogeneous") tem a ver com como as caixas da tabela são dimensionadas. Se "homogêneo" for verdadeiro ("true"), as caixas da tabela são redimensionadas para o tamanho do mais largo componente da tabela. Se "homogêneo" for falso, o tamanho das caixas da tabela é ditado pelo componente mais alto na mesma linha, e pelo componente mais lago na sua coluna.

As linhas e colunas são dispostas de 0 a "n", onde "n" foi o número especificado em Gtk::Table.new. Assim, se você especificar linhas = 2 e colunas = 2, o "layout" pareceria algo como isto:

  .0          1          2
  0+----------+----------+
   |          |          |
  1+----------+----------+
   |          |          |
  2+----------+----------+

Note que o sistema de coordenadas inicia no canto esquerdo superior. Para colocar um componente em uma caixa, use o método a seguir:

  Gtk::Table#attach(filho, 
                    anexado_a_esquerda, anexado_a_direita, anexado_acima, anexado_abaixo, 
                    opções_x, opções_y, 
                    espaço_externo_x, espaço_externo_y)

O primeiro argumento "filho" ("child") é o componente que você gostaria de colocar na tabela.

Os argumentos de anexar a esquerda e direita especificam onde colocar o componente, e quantas caixas usar. Se você quer um botão na entrada do canto direito inferior da nossa tabela 2x2, e quer que ele preencha aquela entrada apenas, anexar_a_esquerda deve ser igual a 1, anexar_a_direita deve ser igual a 2, anexar_acima deve ser igual a 1 e anexar_abaixo deve ser igual a 2.

Agora, se você quisesse que um componente tomasse a linha de cima inteira da nossa tabela 2x2, você usaria anexar_a_esquerda igual a 0, anexar_a_direita igual a 2, anexar_acima igual a 0 e anexar_abaixo igual a 1.

As opções_x e opções_y são usadas para especificar as opções de posicionamento e podem ser "bitwise OR'ed" juntas ((-Em Ruby, o operador OR é representado pelo caractere | ("pipe").-)) para permitir opções multiplas.

As opções são:

:Gtk::FILL
 Se a caixa da tabela é mais larga que o componente, então este componente irá expandir para usar todo o espaço disponível.

:Gtk::SHRINK
 Se o componente da tabela foi alocado com menos espaço que foi pedido ("requested" - comumente ao usuário redimensionar a janela), então os componentes iriam normalmente ser empurrados para baixo da janela e desaparecer. Se Gtk::SHRINK for especificado, os componentes serão encolhidos com a tabela.

:Gtk::EXPAND
 Isso causará a tabela a expandir para usar qualquer espaço restante na janela.

Espaço_externo é como na caixa Gtk::Box, criando uma área clara em pixels ao redor do componente especificado.

Gtk::Table#attach tem muitas opções. Então, existe um atalho:

  Gtk::Table#attach_defaults(componente, anexar_a_esquerda, anexar_a_direita, anexar_acima, anexar_abaixo)

As opções X e Y são padronizadas para Gtk::FILL | Gtk::EXPAND, e espaço_externo X e Y são configurados para 0. O resto dos argumentos são idênticos aos do método método anterior.

Nós também temos Gtk::Table#set_row_spacing e Gtk::Table#set_col_spacing. Eles colocam espaçamentos entre as linhas na linha e coluna espeficiadas.

  Gtk::Table#set_row_spacing(linha, espaçamento)
  Gtk::Table#set_col_spacing(coluna, espaçamento) 

Note que para colunas, o espaço vai a direita da coluna, e para linhas, o espaço vai abaixo da linha.

Você pode também configurar um espaçamento consistente para todas as linhas e/ou colunas com:

  Gtk::Table#set_row_spacings(espaçamento)
  Gtk::Table#set_col_spacings(espaçamento) 

Note que com essas chamadas, a última linha e a última coluna não pegam espaço algum.