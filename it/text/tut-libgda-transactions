= Gestire le transazioni

I metodi speciali di cui abbiamo bisogno per fare ciò che vogliamo
sono definiti in Gda::Transaction, Gda::Connection e Gda::Command classes, e sono:

 * Gda::Transaction.new;
 * Gda::Connection#begin_transaction;
 * Gda::Connection#commit_transaction;
 * Gda::Connection#rollback_transaction;
 * Gda::Command#set_transaction o Gda::Command#transaction=.


Le cose che dovete fare per gestire le transazioni sono:

(1) Creare una transazione
(2) Cambiare, se necessario, il livello di isolamento
(3) Collegare una transazione ad una connessione
(4) Per ogni comando che volete eseguire:
    (1) Creare un comando
    (2) collegare una transazione al comando
    (3) Eseguire il comando
    (5) effettuare il commit o il rollback della transazione

Qui potete vedere un esempio

  def processa_conti(conn)
      # Crea la prima transazione.
      transazione_uno = Gda::Transaction.new("conto1")
      # Cambia il livello di isolamento.
      transazione_uno.isolation_level = Gda::Transaction::ISOLATION_SERIALIZABLE
      # La collega alla connessione.
      conn.begin_transaction(transazione_uno)
  
      comando = Gda::Command.new("UPDATE conti SET saldo=saldo+50 WHERE riferimento_cliente=1",
                                 Gda::Command::TYPE_SQL,
                                 Gda::Command::OPTION_STOP_ON_ERRORS)
      # Collega il comando alla transazione.
      comando.transaction = transazione_uno
      conn.execute_non_query(comando)
  
      comando = Gda::Command.new("UPDATE conti SET saldo=saldo-50 WHERE riferimento_cliente=2",
                                 Gda::Command::TYPE_SQL,
                                 Gda::Command::OPTION_STOP_ON_ERRORS)
      comando.transaction = transazione_uno
      conn.execute_non_query(comando)
  
      # Effettua il commit sulla transazione.
      conn.commit_transaction(transazione_uno)
  
      transazione_due = Gda::Transaction.new("conto2")

      transazione_due.isolation_level = Gda::Transaction::ISOLATION_SERIALIZABLE
      conn.begin_transaction(transazione_due)
  
      comando = Gda::Command.new("UPDATE conti SET saldo=saldo+400 WHERE riferimento_cliente=1",
                                 Gda::Command::TYPE_SQL,
                                 Gda::Command::OPTION_STOP_ON_ERRORS)
      comando.transaction = transazione_due
      conn.execute_non_query(comando)
  
      comando = Gda::Command.new("UPDATE conti SET saldo=saldo-400 WHERE riferimento_clienti=2",
                                 Gda::Command::TYPE_SQL,
                                 Gda::Command::OPTION_STOP_ON_ERRORS)
      comando.transaction = transazione_due
      conn.execute_non_query(comando)
  
      # Effettua il rollback sulla seconda transazione.
      conn.rollback_transaction(transazione_due)
  
      esegui_sql_comando(conn, "SELECT * FROM conti")
  end